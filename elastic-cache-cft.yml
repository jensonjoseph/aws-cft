AWSTemplateFormatVersion: '2010-09-09'

# A CloudFormation template to create/configure an AWS ElastiCache Cluster based on parameters,
# along with an associated security group and subnet group.
#
# You can specify either redis or memcached as an engine, the node (aka instance) type, and
# the number of nodes.
#
# This template is released under Apache Version 2.0, and can be forked, copied, modified,
# customized, etc. to match your application/system requirements.

Description: 'Elastic cache and related resources'

Parameters:

  # ElastiCache stack creation prerequisite:  First create a VPC stack - see README for more info
  VPC:
    Description: Choose VPC ID where this Elastic Cache is to be created
    Type: AWS::EC2::VPC::Id

  Subnet:
    Description: Choose which subnet/s this Elastic Cache need to be placed?
    Type: AWS::EC2::Subnet::Id

  ClusterName:
    Description: Custom name of the cluster. Auto generated if you don't supply your own.
    Type: String
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  CacheNodeType:
    Description: Cache node instance class, e.g. cache.t2.micro(free tier). See https://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/CacheNodes.SelectSize.html
    Type: String
    Default: cache.t2.micro
    ConstraintDescription: Node instance class not supported
    AllowedValues:
      - cache.t2.micro
      - cache.t2.small
      - cache.t2.medium
      - cache.m4.large
      - cache.m4.xlarge
      - cache.m4.2xlarge
      - cache.m4.4xlarge
      - cache.m4.10xlarge
      - cache.r4.large
      - cache.r4.xlarge
      - cache.r4.2xlarge
      - cache.r4.4xlarge
      - cache.r4.8xlarge
      - cache.r4.16xlarge

  CacheEngine:
    Description: The underlying cache engine, either Redis or Memcached
    Type: String
    Default: redis
    ConstraintDescription: Node instance class not supported
    AllowedValues:
      - redis
      - memcached

  CacheNodeCount:
    Description: Number of nodes in the cluster. Only used with memcached engine, for redis this value will be set to 1.
    Type: Number
    MinValue: 1
    MaxValue: 15
    ConstraintDescription: Node count must be between 1 and 15
    Default: 1

  AutoMinorVersionUpgrade:
    Description: Whether or not minor version upgrades to the cache engine should be applied automatically during the maintenance window.
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  AppName:
    Description: What is Application Name?
    Type: String
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    MinLength: 1

  AppCI:
    Description: What is the Application CI or UAI ?
    Type: String
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    MinLength: 1

  EnvironmentType:
    Description: What is the Environment Type?
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - QA
      - PROD
      - NONPROD

Conditions:

  IsRedis: !Equals [ !Ref CacheEngine, redis]

Resources:

  ElasticCacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'ElastiCache Security Group'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: !If [ IsRedis, 6379, 11211]
          ToPort: !If [ IsRedis, 6379, 11211]
          CidrIp: 3.0.0.0/8
          Description: 'Elastic Cache Ingress'
      Tags:
        -
          Key: Name
          Value: !Sub "${AWS::StackName}-ElastiCacheSecurityGroup"
        -
          Key: AppName
          Value: !Ref AppName
        -
          Key: AppCI
          Value: !Ref AppCI
        -
          Key: ENV
          Value: !Ref EnvironmentType
  SubnetGroup:
    Type: 'AWS::ElastiCache::SubnetGroup'
    Properties:
      Description: Subnet Group for Example Replication Group
      SubnetIds:
        - !Ref Subnet


  ElastiCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      Engine: !Ref CacheEngine
      CacheNodeType: !Ref CacheNodeType
      ClusterName : !Ref ClusterName
      NumCacheNodes: !If [ IsRedis, 1, !Ref CacheNodeCount]
      CacheSubnetGroupName: !Ref SubnetGroup
      VpcSecurityGroupIds:
        - !GetAtt ElasticCacheSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

Outputs:
  ElastiCacheStackName:
    Description: ElastiCache Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheName

  ElastiCacheClusterArn:
    Description: ElastiCache Cluster Arn
    Value: !Sub arn:aws:elasticache:${AWS::Region}:${AWS::AccountId}:cluster/${ElastiCacheCluster}
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheClusterArn

  ElastiCacheClusterId:
    Description: ElastiCache Cluster ID
    Value: !Ref ElastiCacheCluster
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheClusterID

  ElastiCacheEngine:
    Description: ElastiCache engine
    Value: !Ref CacheEngine
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheEngine

  ElastiCacheAddress:
    Description: ElastiCache endpoint address
    Value: !If [ IsRedis, !GetAtt ElastiCacheCluster.RedisEndpoint.Address, !GetAtt ElastiCacheCluster.ConfigurationEndpoint.Address]
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCacheAddress

  ElastiCachePort:
    Description: ElastiCache port
    Value: !If [ IsRedis, 6379, 11211]
    Export:
      Name: !Sub ${AWS::StackName}-ElastiCachePort
